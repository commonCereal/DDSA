// Mocks generated by Mockito 5.0.16 from annotations
// in DDSA/test/design_patterns/chain_of_responsibility/chain_of_responsibility_test.dart.
// Do not manually edit this file.

import 'package:DDSA/design_patterns/chain_of_responsibility/discount_handler.dart'
    as _i3;
import 'package:DDSA/design_patterns/chain_of_responsibility/free_shipping_handler.dart'
    as _i5;
import 'package:DDSA/design_patterns/chain_of_responsibility/percent_off_handler.dart'
    as _i4;
import 'package:DDSA/design_patterns/chain_of_responsibility/purchase_handler.dart'
    as _i6;
import 'package:DDSA/design_patterns/chain_of_responsibility/purchase_order.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakePurchaseOrder_0 extends _i1.Fake implements _i2.PurchaseOrder {}

class _FakeDiscountHandler_1 extends _i1.Fake implements _i3.DiscountHandler {}

class _FakePercentOffHandler_2 extends _i1.Fake
    implements _i4.PercentOffHandler {}

class _FakeFreeShippingHandler_3 extends _i1.Fake
    implements _i5.FreeShippingHandler {}

/// A class which mocks [DiscountHandler].
///
/// See the documentation for Mockito's code generation for more information.
class MockDiscountHandler extends _i1.Mock implements _i3.DiscountHandler {
  MockDiscountHandler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  double get minimumAmount =>
      (super.noSuchMethod(Invocation.getter(#minimumAmount), returnValue: 0.0)
          as double);
  @override
  double get discount =>
      (super.noSuchMethod(Invocation.getter(#discount), returnValue: 0.0)
          as double);
  @override
  _i2.PurchaseOrder handleDiscount(_i2.PurchaseOrder? order) =>
      (super.noSuchMethod(Invocation.method(#handleDiscount, [order]),
          returnValue: _FakePurchaseOrder_0()) as _i2.PurchaseOrder);
  @override
  _i3.DiscountHandler copyOf() =>
      (super.noSuchMethod(Invocation.method(#copyOf, []),
          returnValue: _FakeDiscountHandler_1()) as _i3.DiscountHandler);
  @override
  void updatePurchaseHandler(_i6.PurchaseHandler? nextHandler) => super
      .noSuchMethod(Invocation.method(#updatePurchaseHandler, [nextHandler]),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [PercentOffHandler].
///
/// See the documentation for Mockito's code generation for more information.
class MockPercentOffHandler extends _i1.Mock implements _i4.PercentOffHandler {
  MockPercentOffHandler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  double get minimumAmount =>
      (super.noSuchMethod(Invocation.getter(#minimumAmount), returnValue: 0.0)
          as double);
  @override
  double get percentOff =>
      (super.noSuchMethod(Invocation.getter(#percentOff), returnValue: 0.0)
          as double);
  @override
  _i2.PurchaseOrder handleDiscount(_i2.PurchaseOrder? order) =>
      (super.noSuchMethod(Invocation.method(#handleDiscount, [order]),
          returnValue: _FakePurchaseOrder_0()) as _i2.PurchaseOrder);
  @override
  _i4.PercentOffHandler copyOf() =>
      (super.noSuchMethod(Invocation.method(#copyOf, []),
          returnValue: _FakePercentOffHandler_2()) as _i4.PercentOffHandler);
  @override
  void updatePurchaseHandler(_i6.PurchaseHandler? nextHandler) => super
      .noSuchMethod(Invocation.method(#updatePurchaseHandler, [nextHandler]),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [FreeShippingHandler].
///
/// See the documentation for Mockito's code generation for more information.
class MockFreeShippingHandler extends _i1.Mock
    implements _i5.FreeShippingHandler {
  MockFreeShippingHandler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PurchaseOrder handleDiscount(_i2.PurchaseOrder? order) =>
      (super.noSuchMethod(Invocation.method(#handleDiscount, [order]),
          returnValue: _FakePurchaseOrder_0()) as _i2.PurchaseOrder);
  @override
  _i5.FreeShippingHandler copyOf() => (super.noSuchMethod(
      Invocation.method(#copyOf, []),
      returnValue: _FakeFreeShippingHandler_3()) as _i5.FreeShippingHandler);
  @override
  void updatePurchaseHandler(_i6.PurchaseHandler? nextHandler) => super
      .noSuchMethod(Invocation.method(#updatePurchaseHandler, [nextHandler]),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}
